import{_ as e,c as a,o as i,a5 as t}from"./chunks/framework.C_CiGEWW.js";const p=JSON.parse('{"title":"使用Github Pages或Githee Pages部署Vue项目","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/git&github/github-pages.md","filePath":"en/guide/git&github/github-pages.md","lastUpdated":1716713939000}'),o={name:"en/guide/git&github/github-pages.md"},s=t('<h1 id="使用github-pages或githee-pages部署vue项目" tabindex="-1">使用Github Pages或Githee Pages部署Vue项目 <a class="header-anchor" href="#使用github-pages或githee-pages部署vue项目" aria-label="Permalink to &quot;使用Github Pages或Githee Pages部署Vue项目&quot;">​</a></h1><h4 id="文章目录" tabindex="-1">文章目录 <a class="header-anchor" href="#文章目录" aria-label="Permalink to &quot;文章目录&quot;">​</a></h4><h3 id="_1-背景" tabindex="-1">1.背景 <a class="header-anchor" href="#_1-背景" aria-label="Permalink to &quot;1.背景&quot;">​</a></h3><blockquote><h3 id="_1-github-gitee-pages-服务作为一个页面容器-可以说是非常方便了。我们可以在上面免费部署前端项目。" tabindex="-1">1.Github（Gitee） Pages 服务作为一个页面容器，可以说是非常方便了。我们可以在上面<code>免费</code>部署前端项目。 <a class="header-anchor" href="#_1-github-gitee-pages-服务作为一个页面容器-可以说是非常方便了。我们可以在上面免费部署前端项目。" aria-label="Permalink to &quot;1.Github（Gitee） Pages 服务作为一个页面容器，可以说是非常方便了。我们可以在上面`免费`部署前端项目。&quot;">​</a></h3><h3 id="_2-并且同时获得一个附带-github-io-gitee-io-的网址。" tabindex="-1">2.并且同时获得一个附带<code>.github.io（gitee.io）</code>的网址。 <a class="header-anchor" href="#_2-并且同时获得一个附带-github-io-gitee-io-的网址。" aria-label="Permalink to &quot;2.并且同时获得一个附带`.github.io（gitee.io）`的网址。&quot;">​</a></h3><h3 id="_3-其他优点就不再赘述-可自行百度。" tabindex="-1">3.其他优点就不再赘述，可自行百度。 <a class="header-anchor" href="#_3-其他优点就不再赘述-可自行百度。" aria-label="Permalink to &quot;3.其他优点就不再赘述，可自行百度。&quot;">​</a></h3></blockquote><h3 id="_2-github-pages的介绍" tabindex="-1">2.Github Pages的介绍 <a class="header-anchor" href="#_2-github-pages的介绍" aria-label="Permalink to &quot;2.Github Pages的介绍&quot;">​</a></h3><h4 id="具体可以看这个网址gitee-pages官方介绍" tabindex="-1">具体可以看这个网址<a href="https://pages.github.com/" target="_blank" rel="noreferrer">Gitee Pages官方介绍</a> <a class="header-anchor" href="#具体可以看这个网址gitee-pages官方介绍" aria-label="Permalink to &quot;具体可以看这个网址[Gitee Pages官方介绍](https://pages.github.com/)&quot;">​</a></h4><h3 id="_3-上传自己的项目到github上。" tabindex="-1">3.上传自己的项目到Github上。 <a class="header-anchor" href="#_3-上传自己的项目到github上。" aria-label="Permalink to &quot;3.上传自己的项目到Github上。&quot;">​</a></h3><h5 id="点击项目导航栏中的settings-pages" tabindex="-1">点击项目导航栏中的<code>Settings --&gt; Pages</code> <a class="header-anchor" href="#点击项目导航栏中的settings-pages" aria-label="Permalink to &quot;点击项目导航栏中的`Settings --&gt; Pages`&quot;">​</a></h5><p><img src="https://cdn.jsdelivr.net/gh/codelhf/codelhf.github.io@main/src/public/images/202405261633285.png" alt=""></p><h4 id="如果是静态项目-此处不再说啥-直接构建-你的项目中有index-html-主入口-就可以" tabindex="-1">如果是静态项目，此处不再说啥，直接构建，你的项目中有<code>index.html(主入口)</code>就可以 <a class="header-anchor" href="#如果是静态项目-此处不再说啥-直接构建-你的项目中有index-html-主入口-就可以" aria-label="Permalink to &quot;如果是静态项目，此处不再说啥，直接构建，你的项目中有`index.html(主入口)`就可以&quot;">​</a></h4><h3 id="_4-如果你的是vue项目-重点讨论" tabindex="-1">4.如果你的是Vue项目(重点讨论) <a class="header-anchor" href="#_4-如果你的是vue项目-重点讨论" aria-label="Permalink to &quot;4.如果你的是Vue项目(重点讨论)&quot;">​</a></h3><h4 id="在项目路径中添加-spa文件" tabindex="-1">在项目路径中添加<code>.spa</code>文件 <a class="header-anchor" href="#在项目路径中添加-spa文件" aria-label="Permalink to &quot;在项目路径中添加`.spa`文件&quot;">​</a></h4><p><img src="https://cdn.jsdelivr.net/gh/codelhf/codelhf.github.io@main/src/public/images/202405261641125.png" alt=""></p><h5 id="原理-我不是很清楚-应该是给nginx做一个标识作用吧。" tabindex="-1">原理，我不是很清楚，应该是给Nginx做一个<code>标识</code>作用吧。 <a class="header-anchor" href="#原理-我不是很清楚-应该是给nginx做一个标识作用吧。" aria-label="Permalink to &quot;原理，我不是很清楚，应该是给Nginx做一个`标识`作用吧。&quot;">​</a></h5><h3 id="_5-本地-build" tabindex="-1">5. 本地`build <a class="header-anchor" href="#_5-本地-build" aria-label="Permalink to &quot;5. 本地`build&quot;">​</a></h3><h3 id="在构建前-一定要注意修改两个地方" tabindex="-1"><code>在构建前，一定要注意修改两个地方</code> <a class="header-anchor" href="#在构建前-一定要注意修改两个地方" aria-label="Permalink to &quot;`在构建前，一定要注意修改两个地方`&quot;">​</a></h3><h4 id="一、将build-js文件中的console-log全部注释" tabindex="-1">一、将<code>build.js</code>文件中的<code>console.log</code>全部注释 <a class="header-anchor" href="#一、将build-js文件中的console-log全部注释" aria-label="Permalink to &quot;一、将`build.js`文件中的`console.log`全部注释&quot;">​</a></h4><p><img src="https://cdn.jsdelivr.net/gh/codelhf/codelhf.github.io@main/src/public/images/202405261647571.png" alt=""></p><h4 id="二、将config-index-js中的assetspublicpath值改为-或图中的英文指示改为你的项目名称加-如-ltz" tabindex="-1">二、将<code>config/index.js</code>中的<code>assetsPublicPath</code>值改为<code>./</code>或图中的英文指示改为你的项目名称加/<code>如： &#39;/ltz/&#39;</code> <a class="header-anchor" href="#二、将config-index-js中的assetspublicpath值改为-或图中的英文指示改为你的项目名称加-如-ltz" aria-label="Permalink to &quot;二、将`config/index.js`中的`assetsPublicPath`值改为`./`或图中的英文指示改为你的项目名称加/`如： &#39;/ltz/&#39;`&quot;">​</a></h4><h4 id="解决js访问不到的问题。" tabindex="-1">解决<code>JS访问不到</code>的问题。 <a class="header-anchor" href="#解决js访问不到的问题。" aria-label="Permalink to &quot;解决`JS访问不到`的问题。&quot;">​</a></h4><h2 id="注意-此处修改的assetspublicpath为build对象中的" tabindex="-1">注意，此处修改的<code>assetsPublicPath</code>为<code>build</code>对象中的！ <a class="header-anchor" href="#注意-此处修改的assetspublicpath为build对象中的" aria-label="Permalink to &quot;注意，此处修改的`assetsPublicPath`为`build`对象中的！&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/codelhf/codelhf.github.io@main/src/public/images/202405261648702.png" alt=""></p><h4 id="三、打开build-utils-js文件-解决css-字体找不到问题" tabindex="-1">三、打开<code>build/utils.js</code>文件（解决<code>CSS/字体找不到</code>问题） <a class="header-anchor" href="#三、打开build-utils-js文件-解决css-字体找不到问题" aria-label="Permalink to &quot;三、打开`build/utils.js`文件（解决`CSS/字体找不到`问题）&quot;">​</a></h4><h6 id="在如下位置添加-publicpath" tabindex="-1">在如下位置添加 <code>publicPath: &#39;../../&#39;</code> <a class="header-anchor" href="#在如下位置添加-publicpath" aria-label="Permalink to &quot;在如下位置添加 `publicPath: &#39;../../&#39;`&quot;">​</a></h6><p><img src="https://cdn.jsdelivr.net/gh/codelhf/codelhf.github.io@main/src/public/images/202405261649272.png" alt=""></p><h5 id="在本地运行npm-run-build-得到dist" tabindex="-1">在本地运行<code>npm run build</code>，得到<code>dist</code> <a class="header-anchor" href="#在本地运行npm-run-build-得到dist" aria-label="Permalink to &quot;在本地运行`npm run build`，得到`dist`&quot;">​</a></h5><p><img src="https://cdn.jsdelivr.net/gh/codelhf/codelhf.github.io@main/src/public/images/202405261650092.png" alt=""></p><h3 id="_7-将build得到的文件-上传到你git仓库中。" tabindex="-1">7.将<code>build</code>得到的文件，上传到你<code>git</code>仓库中。 <a class="header-anchor" href="#_7-将build得到的文件-上传到你git仓库中。" aria-label="Permalink to &quot;7.将`build`得到的文件，上传到你`git`仓库中。&quot;">​</a></h3><h3 id="_8-点击项目导航栏中的settings-pages" tabindex="-1">8.点击项目导航栏中的<code>Settings --&gt; Pages</code> <a class="header-anchor" href="#_8-点击项目导航栏中的settings-pages" aria-label="Permalink to &quot;8.点击项目导航栏中的`Settings --&gt; Pages`&quot;">​</a></h3><h3 id="_9-开始构建" tabindex="-1">9.开始构建 <a class="header-anchor" href="#_9-开始构建" aria-label="Permalink to &quot;9.开始构建&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/codelhf/codelhf.github.io@main/src/public/images/202405261652270.png" alt=""></p><h2 id="选择你的分支-如果只有一个分支-就选master" tabindex="-1">选择你的分支，如果只有一个分支，就选<code>master</code> <a class="header-anchor" href="#选择你的分支-如果只有一个分支-就选master" aria-label="Permalink to &quot;选择你的分支，如果只有一个分支，就选`master`&quot;">​</a></h2><h2 id="选择部署目录-本文中-build后的文件全部都在dist目录下-所以-填入dist。" tabindex="-1">选择部署目录，本文中，<code>build</code>后的文件全部都在<code>dist</code>目录下，所以，填入<code>dist</code>。 <a class="header-anchor" href="#选择部署目录-本文中-build后的文件全部都在dist目录下-所以-填入dist。" aria-label="Permalink to &quot;选择部署目录，本文中，`build`后的文件全部都在`dist`目录下，所以，填入`dist`。&quot;">​</a></h2><h2 id="如果-你发现-构建后-css-js-img等文件-报了404异常-请看本文第5步-二-三" tabindex="-1">如果，你发现，构建后，<code>css\\js\\img</code>等文件，报了<code>404</code>异常，请看本文<code>第5步 -&gt; 二\\三</code> <a class="header-anchor" href="#如果-你发现-构建后-css-js-img等文件-报了404异常-请看本文第5步-二-三" aria-label="Permalink to &quot;如果，你发现，构建后，`css\\js\\img`等文件，报了`404`异常，请看本文`第5步 -&gt; 二\\三`&quot;">​</a></h2>',34),d=[s];function h(l,c,r,n,u,b){return i(),a("div",null,d)}const m=e(o,[["render",h]]);export{p as __pageData,m as default};
